---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/Base.astro';
import SocialButtons from '../components/SocialButtons.astro';
import Recommendation from '../components/Recommendation.astro';

const recommendations = await getCollection('recommendations');
---

<BaseLayout title="Portfolio">
  <main>
    <h1>Hi there!</h1>
    <h1>I'm <span class="text-gradient">Kevin Castro</span></h1>
    <h2 class="subtitle">
      <code id="position"></code> Software Engineer
    </h2>
    <article class="text-content">
      <p>
        Full-stack software engineer with a penchant for security and
        automation. Strong advocate for underrepresented users and software
        accessibility. Experienced with Full-stack development in the <code
          >MERN</code
        > stack and Machine Learning with <code>Python</code>.
      </p>
    </article>
    <SocialButtons />
    <div class="resume">
      <a href="Kevin-Castro-Resume.pdf" class="button" download
        >Download Resume</a
      >
    </div>
    <div class="recommendations">
      {recommendations.map((rec) => <Recommendation recommendation={rec} />)}
    </div>
  </main>
</BaseLayout>

<script>
  const POSITION_TEXT_INTERVAL_MS = 4000;
  const positionElement = document.querySelector('#position')!;

  const fadeInOutKeyframes = [
    { opacity: 0 },
    { opacity: 1 },
    { opacity: 1 },
    { opacity: 0 },
  ];
  const setPositionTextContent = (text: string) => {
    positionElement.textContent = text;
  };

  let index = 0;
  const positions = ['Full-Stack', 'Back-end', 'Front-end'];
  let position = positions[index];

  setPositionTextContent(position!);
  positionElement.animate(fadeInOutKeyframes, POSITION_TEXT_INTERVAL_MS);

  setInterval(() => {
    index++;
    if (index === positions.length) {
      index = 0;
    }
    position = positions[index];
    setPositionTextContent(position!);
    // add 10ms as a buffer to prevent blinking
    positionElement.animate(fadeInOutKeyframes, POSITION_TEXT_INTERVAL_MS + 10);
  }, POSITION_TEXT_INTERVAL_MS);
</script>

<style>
  main {
    max-width: var(--default-width);
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .subtitle {
    text-align: right;
  }
  .resume {
    display: flex;
    justify-content: center;
    margin: 1em 0;
  }
  .recommendations {
    display: grid;
    justify-content: center;
    grid-template-rows: repeat(200em);
    row-gap: 2em;
  }
</style>
