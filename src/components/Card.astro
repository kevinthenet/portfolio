---
type Clickable = {
  isClickable: true;
  title: string;
  body: string;
  href: string;
};

type NonClickable = {
  isClickable: false;
  title: string;
  subtitle: string;
  annotation: string;
  image: {
    url: string;
    alt: string;
  };
};

export type Props = Clickable | NonClickable;

// @ts-ignore ts(2339) - ignoring due to type guards being used in the component
// but the props are expecting a static interface
const { isClickable, title, subtitle, annotation, body, href, image } = Astro.props;
---

<li class=`link-card ${isClickable ? 'clickable' : 'nonclickable'}`>
  {
    isClickable ? (
      <a href={href} class="card">
        <h2>
          {title}
          <span>&rarr;</span>
        </h2>
        <p>{body}</p>
      </a>
    ) : (
      <div class="card">
        <div class="header">
          <div class="badge">
            <img src={image.url} alt={image.alt} />
          </div>
          <div class="details">
            <h2>{title}</h2>
            <h4>{subtitle}</h4>
            <sub>{annotation}</sub>
          </div>
        </div>
        <div class="content">
          <slot />
        </div>
      </div>
    )
  }
</li>

<style>
  .link-card {
    display: flex;
    list-style: none;
    padding: 0.25em;
    background-color: white;
    background-image: none;
    background-size: 400%;
    border-radius: 0.6em;
    box-shadow: 0.25em 0.25em 0.275em -0.0625em rgba(0, 0, 0, 0.1),
      0.25em 0.125em 0.25em -0.125em rgba(0, 0, 0, 0.1);
    background-position: 100%;
    transition: background-position 1s cubic-bezier(0.22, 1, 0.36, 1);
  }
  .nonclickable {
    background: var(--text-background);
    flex-direction: column;
    transition: none;
  }
  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: 1em 1.3em;
    border-radius: 0.35em;
    color: #111;
    background-color: white;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25em;
  }
  p {
    margin-top: 0.5em;
    margin-bottom: 0;
    color: #444;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .clickable:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .clickable:is(:hover, :focus-within) h2 {
    color: var(--accent);
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  .header {
    display: grid;
    grid-template-columns: [first] 1fr [second] 9fr [end];
    padding: 1em;
  }
  .content {
    padding: 0 1em;
  }
  img {
    width: 5em;
    border-radius: 2.5em;
  }
  .details > h4 {
    margin: 0;
  }
</style>
